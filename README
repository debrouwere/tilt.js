Preprocessor is a generic interface to various JavaScript and CSS preprocessors, like LESS, Jade, CoffeeScript, HAML and so on, written in CoffeeScript for the node.js platform. Preprocessor autodetects file formats based on path and mimetype.

For template languages that support it, Preprocessor can also do precompilation, which parses the template and turns it into JavaScript for faster client-side rendering. Compile with `preprocessor.compile` and precompile with `preprocessor.preCompile`, both of which take a `preprocessor.File object`, a context object (mainly useful for templates languages) and a callback with the result.

Install with `npm install preprocessor`.

Example:

    var preprocessor = require('preprocessor');
    var file = new preprocessor.File({path: 'homepage.jade'});
    preprocessor.compile(file, {page_title: 'Hello world'}, function(template){
        // this is the rendered html template
        // (or css, or javascript)
        console.log(template);
    });

Less than a 100 lines of code if you don't count the handlers for each individual format, so browse through the code for more information. Extracted from (and used in) the Draughtsman front-end prototyping server, which is available at https://github.com/stdbrouw/draughtsman
